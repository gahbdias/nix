# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

with lib;
let
  cfg = config.blackmatter;
in
{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  options = {
    blackmatter = {
      hardware.rai.enable = mkEnableOption "hardware.rai";
    };
  };
  config = mkMerge [
    (mkIf cfg.hardware.rai.enable {
      sound.enable = true;
      hardware.pulseaudio.enable = false;
      hardware.bluetooth.enable = false;
      programs.light.enable = true;
      boot.initrd.availableKernelModules = [
        "usb_storage"
        "xhci_pci"
        "usbhid"
        "sd_mod"
        "nvme"
        "ahci"
      ];
      boot.initrd.kernelModules = [ ];
      boot.kernelModules = [ "kvm-amd" ];
      boot.extraModulePackages = [ ];
      fileSystems."/" =
        {
          device = "/dev/disk/by-uuid/cef7cba4-c8cd-4d95-bb73-1fd9fed4d784";
          fsType = "ext4";
        };
      fileSystems."/boot" =
        {
          device = "/dev/disk/by-uuid/6FEE-DEAC";
          fsType = "vfat";
        };
      swapDevices = [ ];

      # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
      # (the default) this is the recommended approach. When using systemd-networkd it's
      # still possible to use this option, but it's recommended to use it in conjunction
      # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
      networking.useDHCP = lib.mkDefault true;
      # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;
      # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;
      # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;
      nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
      hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    })
  ];
}
